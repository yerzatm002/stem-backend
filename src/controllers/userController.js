const { User } = require("../models");

// üìå –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ
exports.getUser = async (req, res) => {
  try {
    const user = await User.findByPk(req.params.id, {
      attributes: ["id", "email", "name", "photo", "role", "completedCourses", "createdAt"],
    });

    if (!user) {
      return res.status(404).json({ message: "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω" });
    }

    res.json(user);
  } catch (error) {
    res.status(500).json({ message: "–û—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞", error });
  }
};

// üìå –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø—Ä–æ—Ñ–∏–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
exports.updateUser = async (req, res) => {
  try {
    const { name, photo } = req.body;

    const user = await User.findByPk(req.params.id);
    if (!user) {
      return res.status(404).json({ message: "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω" });
    }

    // –†–∞–∑—Ä–µ—à–∞–µ–º –æ–±–Ω–æ–≤–ª—è—Ç—å —Ç–æ–ª—å–∫–æ —Å–µ–±—è, –µ—Å–ª–∏ —ç—Ç–æ –Ω–µ –∞–¥–º–∏–Ω
    if (req.user.id !== user.id && req.user.role !== "admin") {
      return res.status(403).json({ message: "–ù–µ—Ç –¥–æ—Å—Ç—É–ø–∞" });
    }

    user.name = name || user.name;
    user.photo = photo || user.photo;
    await user.save();

    res.json({ message: "–ü—Ä–æ—Ñ–∏–ª—å –æ–±–Ω–æ–≤–ª–µ–Ω", user });
  } catch (error) {
    res.status(500).json({ message: "–û—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞", error });
  }
};

// üìå –£–¥–∞–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
exports.deleteUser = async (req, res) => {
  try {
    const user = await User.findByPk(req.params.id);
    if (!user) {
      return res.status(404).json({ message: "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω" });
    }

    // –†–∞–∑—Ä–µ—à–∞–µ–º —É–¥–∞–ª—è—Ç—å —Ç–æ–ª—å–∫–æ —Å–µ–±—è –∏–ª–∏ –µ—Å–ª–∏ —ç—Ç–æ –∞–¥–º–∏–Ω
    if (req.user.id !== user.id && req.user.role !== "admin") {
      return res.status(403).json({ message: "–ù–µ—Ç –¥–æ—Å—Ç—É–ø–∞" });
    }

    await user.destroy();
    res.json({ message: "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–¥–∞–ª–µ–Ω" });
  } catch (error) {
    res.status(500).json({ message: "–û—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞", error });
  }
};

// üìå –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π (–¢–æ–ª—å–∫–æ –¥–ª—è –∞–¥–º–∏–Ω–∞)
exports.getAllUsers = async (req, res) => {
  try {
    if (req.user.role !== "admin") {
      return res.status(403).json({ message: "–ù–µ—Ç –¥–æ—Å—Ç—É–ø–∞" });
    }

    const users = await User.findAll({
      attributes: ["id", "email", "name", "photo", "role", "createdAt"],
    });

    res.json(users);
  } catch (error) {
    res.status(500).json({ message: "–û—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞", error });
  }
};
