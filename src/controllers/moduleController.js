const { Module, Course, User } = require("../models");

// üìå –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –º–æ–¥—É–ª–µ
exports.getModuleById = async (req, res) => {
  try {
    const module = await Module.findByPk(req.params.id);

    if (!module) {
      return res.status(404).json({ message: "–ú–æ–¥—É–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω" });
    }

    res.json(module);
  } catch (error) {
    res.status(500).json({ message: "–û—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞", error });
  }
};

// üìå –°–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–≥–æ –º–æ–¥—É–ª—è (—Ç–æ–ª—å–∫–æ –¥–ª—è –∞–¥–º–∏–Ω–∞)
exports.createModule = async (req, res) => {
  try {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞ (—Ç–æ–ª—å–∫–æ –∞–¥–º–∏–Ω –º–æ–∂–µ—Ç —Å–æ–∑–¥–∞–≤–∞—Ç—å –º–æ–¥—É–ª–∏)
    if (req.user.role !== "admin") {
      return res.status(403).json({ message: "–ù–µ—Ç –¥–æ—Å—Ç—É–ø–∞" });
    }

    const { title, content, courseId, videoUrl, materialsUrl } = req.body;

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —É–∫–∞–∑–∞–Ω–Ω—ã–π –∫—É—Ä—Å
    const course = await Course.findByPk(courseId);
    if (!course) {
      return res.status(404).json({ message: "–ö—É—Ä—Å –Ω–µ –Ω–∞–π–¥–µ–Ω" });
    }

    // –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π –º–æ–¥—É–ª—å
    const module = await Module.create({ title, content, courseId, videoUrl, materialsUrl });

    res.status(201).json({ message: "–ú–æ–¥—É–ª—å —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω", module });
  } catch (error) {
    console.error("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –º–æ–¥—É–ª—è:", error);
    res.status(500).json({ message: "–û—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞", error });
  }
};


// üìå –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –º–æ–¥—É–ª—è (—Ç–æ–ª—å–∫–æ –¥–ª—è –∞–¥–º–∏–Ω–∞)
exports.updateModule = async (req, res) => {
  try {
    if (req.user.role !== "admin") {
      return res.status(403).json({ message: "–ù–µ—Ç –¥–æ—Å—Ç—É–ø–∞" });
    }

    const module = await Module.findByPk(req.params.id);
    if (!module) {
      return res.status(404).json({ message: "–ú–æ–¥—É–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω" });
    }

    const { title, content } = req.body;
    module.title = title || module.title;
    module.content = content || module.content;
    await module.save();

    res.json({ message: "–ú–æ–¥—É–ª—å –æ–±–Ω–æ–≤–ª–µ–Ω", module });
  } catch (error) {
    res.status(500).json({ message: "–û—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞", error });
  }
};

// üìå –£–¥–∞–ª–µ–Ω–∏–µ –º–æ–¥—É–ª—è (—Ç–æ–ª—å–∫–æ –¥–ª—è –∞–¥–º–∏–Ω–∞)
exports.deleteModule = async (req, res) => {
  try {
    if (req.user.role !== "admin") {
      return res.status(403).json({ message: "–ù–µ—Ç –¥–æ—Å—Ç—É–ø–∞" });
    }

    const module = await Module.findByPk(req.params.id);
    if (!module) {
      return res.status(404).json({ message: "–ú–æ–¥—É–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω" });
    }

    await module.destroy();
    res.json({ message: "–ú–æ–¥—É–ª—å —É–¥–∞–ª–µ–Ω" });
  } catch (error) {
    res.status(500).json({ message: "–û—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞", error });
  }
};

// üìå –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ –º–æ–¥—É–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º
exports.completeModule = async (req, res) => {
  try {
    const module = await Module.findByPk(req.params.id);
    if (!module) {
      return res.status(404).json({ message: "–ú–æ–¥—É–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω" });
    }

    const user = await User.findByPk(req.user.id);
    if (!user) {
      return res.status(404).json({ message: "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω" });
    }

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∑–∞–≤–µ—Ä—à–∏–ª –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ —ç—Ç–æ—Ç –º–æ–¥—É–ª—å
    const completedModules = user.completedCourses || [];
    if (completedModules.includes(module.id)) {
      return res.status(400).json({ message: "–í—ã —É–∂–µ –∑–∞–≤–µ—Ä—à–∏–ª–∏ —ç—Ç–æ—Ç –º–æ–¥—É–ª—å" });
    }

    // –î–æ–±–∞–≤–ª—è–µ–º –º–æ–¥—É–ª—å –≤ —Å–ø–∏—Å–æ–∫ –∑–∞–≤–µ—Ä—à–µ–Ω–Ω—ã—Ö
    user.completedCourses = [...completedModules, module.id];
    await user.save();

    res.json({ message: "–ú–æ–¥—É–ª—å –∑–∞–≤–µ—Ä—à–µ–Ω", user });
  } catch (error) {
    res.status(500).json({ message: "–û—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞", error });
  }
};
