const { User, Course, Test, TestResult } = require("../models");
const { Op } = require("sequelize");


// üìå –ü–æ–ª—É—á–µ–Ω–∏–µ –∞–Ω–∞–ª–∏—Ç–∏–∫–∏ –ø–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º
exports.getUserStats = async (req, res) => {
  try {
    const totalUsers = await User.count();
    const activeUsers = await User.count({
      where: { lastLoginAt: { [Op.ne]: null } }, // ‚úÖ –ü—Ä–æ–≤–µ—Ä—è–µ–º –∞–∫—Ç–∏–≤–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    });

    res.json({ totalUsers, activeUsers });
  } catch (error) {
    console.error("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π:", error);
    res.status(500).json({ message: "–û—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞", error });
  }
};

// üìå –ü–æ–ª—É—á–µ–Ω–∏–µ –∞–Ω–∞–ª–∏—Ç–∏–∫–∏ –ø–æ –∫—É—Ä—Å–∞–º
exports.getCourseStats = async (req, res) => {
  try {
    const totalCourses = await Course.count();
    const mostPopularCourse = await Course.findOne({
      order: [["enrolledUsers", "DESC"]], // ‚úÖ –ò—Å–ø–æ–ª—å–∑—É–µ–º `enrolledUsers`
      attributes: ["id", "title", "enrolledUsers"],
    });

    res.json({ totalCourses, mostPopularCourse });
  } catch (error) {
    console.error("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –∫—É—Ä—Å–æ–≤:", error);
    res.status(500).json({ message: "–û—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞", error });
  }
};

// üìå –ü–æ–ª—É—á–µ–Ω–∏–µ –∞–Ω–∞–ª–∏—Ç–∏–∫–∏ –ø–æ —Ç–µ—Å—Ç–∞–º
exports.getTestStats = async (req, res) => {
  try {
    const totalTests = await Test.count();
    const totalAttempts = await TestResult.count();
    const averageScore = await TestResult.findOne({
      attributes: [[TestResult.sequelize.fn("AVG", TestResult.sequelize.col("score")), "avgScore"]],
    });

    res.json({
      totalTests,
      totalAttempts,
      averageScore: averageScore ? parseFloat(averageScore.dataValues.avgScore).toFixed(2) : "0.00",
    });
  } catch (error) {
    console.error("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ —Ç–µ—Å—Ç–æ–≤:", error);
    res.status(500).json({ message: "–û—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞", error });
  }
};
